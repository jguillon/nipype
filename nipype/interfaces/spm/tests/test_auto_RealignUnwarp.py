# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from __future__ import unicode_literals
from ..preprocess import RealignUnwarp


def test_RealignUnwarp_inputs():
    input_map = dict(
        basfcn=dict(field='uweoptions.basfcn', ),
        expround=dict(field='uweoptions.expround', ),
        fot=dict(field='uweoptions.fot', ),
        fwhm=dict(field='eoptions.fwhm', ),
        ignore_exception=dict(
            deprecated='1.0.0',
            nohash=True,
            usedefault=True,
        ),
        in_files=dict(
            copyfile=True,
            field='data.scans',
            mandatory=True,
        ),
        interp=dict(field='eoptions.interp', ),
        jm=dict(field='uweoptions.jm', ),
        matlab_cmd=dict(),
        mfile=dict(usedefault=True, ),
        noi=dict(field='uweoptions.noi', ),
        out_prefix=dict(
            field='uwroptions.prefix',
            usedefault=True,
        ),
        paths=dict(),
        phase_map_file=dict(
            copyfile=False,
            field='data.pmscan',
            mandatory=True,
        ),
        quality=dict(field='eoptions.quality', ),
        regfactor=dict(field='uweoptions.lambda', ),
        register_to_mean=dict(field='eoptions.rtm', ),
        regorder=dict(field='uweoptions.regorder', ),
        rem=dict(field='uweoptions.rem', ),
        separation=dict(field='eoptions.sep', ),
        sot=dict(field='uweoptions.sot', ),
        use_mcr=dict(),
        use_v8struct=dict(
            min_ver='8',
            usedefault=True,
        ),
        uwfwhm=dict(field='uweoptions.uwfwhm', ),
        weight_img=dict(field='eoptions.weight', ),
        wrap=dict(field='eoptions.wrap', ),
        write_interp=dict(field='uwroptions.rinterp', ),
        write_mask=dict(field='uwroptions.mask', ),
        write_which=dict(
            field='uwroptions.uwwhich',
            maxlen=2,
            minlen=2,
            usedefault=True,
        ),
        write_wrap=dict(field='uwroptions.wrap', ),
    )
    inputs = RealignUnwarp.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(inputs.traits()[key], metakey) == value
def test_RealignUnwarp_outputs():
    output_map = dict(
        mean_image=dict(),
        modified_scans=dict(),
        realignment_parameters=dict(),
        runwarped_files=dict(),
    )
    outputs = RealignUnwarp.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            assert getattr(outputs.traits()[key], metakey) == value
